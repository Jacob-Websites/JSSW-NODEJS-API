name: Build and Push Docker image

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    environment:
      name: Prod
    env:
        IMAGE_NAME: test
        PROJECT_ID: dynamicwebsites
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: List files for debugging
      run: ls -alh

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        version: 'latest'
        service_account_key: ${{ secrets.GCLOUD_SERVICE_KEY }}
        project_id: dynamicwebsites
        export_default_credentials: true

  
  

    - name: Set up Docker Build
      uses: docker/setup-buildx-action@v2

    - name: Build and push Docker image
      run: docker build -t $IMAGE_NAME:latest .

    - name: Automatic Tagging of Releases
      id: increment-git-tag
      run: |
        bash ./scripts/git_update.sh -v major

    - name: Configure Docker Client
      run: |-
          gcloud auth configure-docker --quiet
          gcloud auth configure-docker us-west2-docker.pkg.dev --quiet    

          - name: Push Docker Image to Container Registry (GCR)
          env:
            GIT_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
          run: |-
            docker tag $IMAGE_NAME:latest gcr.io/$PROJECT_ID/$IMAGE_NAME:latest
            docker tag $IMAGE_NAME:latest gcr.io/$PROJECT_ID/$IMAGE_NAME:$GIT_TAG
            docker push gcr.io/$PROJECT_ID/$IMAGE_NAME:latest
            docker push gcr.io/$PROJECT_ID/$IMAGE_NAME:$GIT_TAG
    
    - name: Push Docker Image to Artifact Registry
      env:
            GIT_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
      run: |-
            docker tag $IMAGE_NAME:latest us-west2-docker.pkg.dev/$PROJECT_ID/images/$IMAGE_NAME:latest
            docker tag $IMAGE_NAME:latest us-west2-docker.pkg.dev/$PROJECT_ID/images/$IMAGE_NAME:$GIT_TAG
            docker push us-west2-docker.pkg.dev/$PROJECT_ID/images/$IMAGE_NAME:latest
            docker push us-west2-docker.pkg.dev/$PROJECT_ID/images/$IMAGE_NAME:$GIT_TAG
    #   uses: docker/build-push-action@v4
    #   with:
    #     context: .
    #     file: Dockerfile
    #     push: true
    #     tags: gcr.io/dynamicwebsites/test:latest

  trigger-deploy:
    runs-on: ubuntu-latest
    needs: build 
    
    steps:
    - name: Trigger Render Deploy
      run: curl -X POST "${{ secrets.TriggerRender }}"
